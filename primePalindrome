class Solution {
    public int primePalindrome(int N) {
           while(true){
            if (N == reverse(N) && isPrime(N))
                return N;
            N++;
            if (10_000_000 < N && N < 100_000_000)
                N = 100_000_000;
           }
    }
    public boolean isPrime(int n){

       if(n==2)
            return true;
       if(n%2==0||n<2)
            return false;
       for(int i=3;i<=Math.sqrt(n);i+=2){
                if(n%i==0) return false;
            }
            return true;

    }
    public int reverse(int N) {
        int ans = 0;
        while (N > 0) {
            ans = 10 * ans + (N % 10);
            N /= 10;
        }
        return ans;
    }

}



another way

class Solution {
   public int primePalindrome(int N) {
           while(true){
               if(checkPrime(N)&&checkPalindrome(N))
                   return N;
               N++;
               if (10_000_000 < N && N < 100_000_000)
                N = 100_000_000;
           }
    }
    public boolean checkPrime(int n){

       if(n==2)
            return true;
       if(n%2==0||n<2)
            return false;
       for(int i=3;i<=Math.sqrt(n);i+=2){
                if(n%i==0) return false;
            }
            return true;

    }
    public boolean checkPalindrome(int n){
        String m=Integer.toString(n);

        for(int i=0;i<m.length()/2;i++){
            if(m.charAt(i)!=m.charAt(m.length()-i-1)) return false;
        }
        return true;
    }

}
